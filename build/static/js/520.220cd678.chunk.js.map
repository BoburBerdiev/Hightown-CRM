{"version":3,"file":"static/js/520.220cd678.chunk.js","mappings":"8TAMA,MAAM,MAAEA,GAAUC,EAAAA,EAgElB,EA5DqBC,KACjB,MAAM,KAACC,IAAMC,EAAAA,EAAAA,MACT,KAACC,EAAI,QAACC,EAAO,UAACC,IAAaC,EAAAA,EAAAA,UAC7B,aACA,IAAMC,EAAAA,EAAWC,QAAQ,yBACzB,CACEC,QAAUC,IAERC,EAAAA,GAAQD,MAAMA,EAAM,IAItBE,GAAYC,EAAAA,EAAAA,UAAQ,IACpBR,GAAaD,EACR,IAKTD,EAAKW,KAAKC,IAERA,EAAKC,SAAS,IAAIC,KAAKF,EAAKC,UAAUE,oBAAoB,IAGrDf,IACN,CAACA,EAAME,EAAWD,IAErB,OADEe,QAAQC,IAAInB,IAEVoB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACzB,EAAK,CAAC0B,KAAK,KAAKC,MAAO,CAACC,MAAM,SAASJ,SAAC,iEAEnCrB,EAAK0B,KAAK,IACNJ,EAAAA,EAAAA,KAACK,EAAAA,EAAmB,CAACC,MAAM,OAAOC,OAAQ,IAAIR,UAC1CD,EAAAA,EAAAA,MAACU,EAAAA,EAAQ,CAAE5B,KAAMS,EAAUU,SAAA,EACvBC,EAAAA,EAAAA,KAACS,EAAAA,EAAa,CAACC,gBAAgB,SAC/BV,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAACC,QAAQ,UACfZ,EAAAA,EAAAA,KAACa,EAAAA,EAAK,KACNb,EAAAA,EAAAA,KAACc,EAAAA,EAAO,KACRd,EAAAA,EAAAA,KAACe,EAAAA,EAAM,KACPf,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACJ,QAAQ,QAAQK,KAAK,kBAIlCjB,EAAAA,EAAAA,KAACK,EAAAA,EAAmB,CAACC,MAAM,OAAOC,OAAQ,IAAIR,UAC1CD,EAAAA,EAAAA,MAACU,EAAAA,EAAQ,CAAE5B,KAAMS,EAAUU,SAAA,EACvBC,EAAAA,EAAAA,KAACS,EAAAA,EAAa,CAACC,gBAAgB,SAC/BV,EAAAA,EAAAA,KAACW,EAAAA,EAAK,CAACC,QAAQ,cACfZ,EAAAA,EAAAA,KAACa,EAAAA,EAAK,KACNb,EAAAA,EAAAA,KAACc,EAAAA,EAAO,KACRd,EAAAA,EAAAA,KAACe,EAAAA,EAAM,KACPf,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CAACJ,QAAQ,QAAQK,KAAK,mBAMxC,EClDZ,EATkBC,KAEVlB,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACmB,EAAU,K","sources":["pages/sample/Dashboard/OrderChart.jsx","pages/sample/Dashboard/index.jsx"],"sourcesContent":["import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend ,ResponsiveContainer} from 'recharts';\nimport { useQuery} from \"react-query\";\nimport apiService from \"../../../@crema/services/apis/api\";\nimport {message,Typography } from 'antd';\nimport { useMemo } from 'react';\nimport {useAuthUser} from \"../../../@crema/utility/AuthHooks\";\nconst { Title } = Typography;\n\n\n\nconst DealersChart = () => {\n    const {user}=useAuthUser()\n  const {data,isError,isLoading} = useQuery(\n      'order-get',\n      () => apiService.getData('Apartment/Statistics'),\n      {\n        onError: (error) => {\n\n          message.error(error);\n        },\n      },\n  );\n  const dataOrder = useMemo(() => {\n    if (isLoading || isError) {\n      return [];\n    }\n\n\n\n    data.map((item) => {\n\n      item.dateTime=new Date(item.dateTime).toLocaleDateString();\n    })\n\n    return data\n  }, [data, isLoading, isError]);\n    console.log(user)\n  return (\n      <div>\n        <Title type='h2' style={{color:'white'}}>Статистика</Title>\n          {\n              user.role[1] ?\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                      <BarChart  data={dataOrder}>\n                          <CartesianGrid strokeDasharray=\"3 6\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Bar dataKey=\"count\" fill=\"#3D4F51\" />\n                      </BarChart>\n                  </ResponsiveContainer>\n                  :\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                      <BarChart  data={dataOrder}>\n                          <CartesianGrid strokeDasharray=\"3 6\" />\n                          <XAxis dataKey=\"dateTime\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Bar dataKey=\"count\" fill=\"#3D4F51\" />\n                      </BarChart>\n                  </ResponsiveContainer>\n          }\n\n\n      </div>\n  )\n}\n\nexport default DealersChart","import OrderChart from './OrderChart';\n// import ProductChart from \"./ProductChart\";\n\n\n\n\n\nconst Dashboard = () => {\n    return (\n        <div>\n            <OrderChart/>\n       {/*<ProductChart/>*/}\n        </div>\n    );\n};\n\nexport default Dashboard;"],"names":["Title","Typography","DealersChart","user","useAuthUser","data","isError","isLoading","useQuery","apiService","getData","onError","error","message","dataOrder","useMemo","map","item","dateTime","Date","toLocaleDateString","console","log","_jsxs","children","_jsx","type","style","color","role","ResponsiveContainer","width","height","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","Dashboard","OrderChart"],"sourceRoot":""}